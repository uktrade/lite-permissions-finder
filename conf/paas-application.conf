#Provides database config from the environment
play.application.loader = modules.common.PaasApplicationLoader

play.http.secret.key = ${PLAY_HTTP_SECRET_KEY}

errorDetailEnabled = ${ERROR_DETAIL_ENABLED}

play.modules {
  enabled += modules.GuiceModule
  enabled += "org.flywaydb.play.PlayModule"
}

play.filters {
  headers.contentSecurityPolicy = "default-src 'self'; font-src data:"
  hosts.allowed = [${PLAY_FILTERS_HOSTS_ALLOWED}]
}

play.http.session = {
  domain = ${PLAY_HTTP_SESSION_DOMAIN}
  sameSite = null
}

play.http.errorHandler = "exceptions.PermissionsFinderErrorHandler"

play.i18n {
  langs = ["en"]
}

play.cache {
  defaultCache = "permission-finder-cache" #used as prefix for cache keys
}

pac4j {
  sessionStoreKeyPrefix = ${PAC4J_SESSION_STORE_KEY_PREFIX}
  sessionTimeoutMinutes = ${PAC4J_SESSION_TIMEOUT_MINUTES}
}

## Disable PID File
pidfile.path = "/dev/null"

play.db {
  config = "db"
  default = "default"
  prototype {
    hikaricp.minimumIdle = ${PLAY_DB_PROTOTYPE_HIKARICP_MINIMUM_IDLE}
    hikaricp.maximumPoolSize = ${PLAY_DB_PROTOTYPE_HIKARICP_MAXIMUM_POOL_SIZE}
  }
}

jpa.default = defaultPersistenceUnit

db {
  default.driver = org.postgresql.Driver
  # url/username/password are set from PaasApplicationLoader
  default.schema = ${DB_DEFAULT_SCHEMA}
  default.jndiName = DefaultDS
  default.migration.auto = true
}

countryService {
  address = ${COUNTRY_SERVICE_ADDRESS}
  timeout = 10000
  credentials = ${COUNTRY_SERVICE_CREDENTIALS}
}

notificationService.aws.sqsQueueUrl = ${NOTIFICATION_SERVICE_AWS_SQS_QUEUE_URL}

ogelService {
  address = ${OGEL_SERVICE_ADDRESS}
  timeout = 10000
  credentials = ${OGEL_SERVICE_CREDENTIALS}
}

permissionsService {
  address = ${PERMISSIONS_SERVICE_ADDRESS}
  timeout = 10000
}

customerService {
  address = ${CUSTOMER_SERVICE_ADDRESS}
  timeout = 10000
}

userService {
  address = ${USER_SERVICE_ADDRESS}
  timeout = 10000
  credentials = ${USER_SERVICE_CREDENTIALS}
}

ecjuEmailAddress = ${ECJU_EMAIL_ADDRESS}

redis {
  host = ${REDIS_HOST}
  password = ${REDIS_PASSWORD}
  port = ${REDIS_PORT}
  timeout = ${REDIS_TIMEOUT}
  database = 0
  ssl = ${REDIS_SSL}

  pool {
    maxTotal = ${REDIS_POOL_MAX_TOTAL}
    minIdle = ${REDIS_POOL_MIN_IDLE}
  }

  keyPrefix = ${REDIS_KEY_PREFIX}
  hashTtlSeconds = ${REDIS_HASH_TTL_SECONDS}
}

saml {
  issuer = ${SAML_ISSUER}
  callbackUrl = ${SAML_CALLBACK_URL}
  logoutUrl = ${SAML_LOGOUT_URL}
  location = ${SAML_LOCATION}
  entityId = ${SAML_ENTITY_ID}
  x509Certificate = ${SAML_X509_CERTIFICATE}
}

jwtSharedSecret = ${JWT_SHARED_SECRET}

dashboard.url = ${DASHBOARD_URL}
permissionsFinderUrl = ${PERMISSIONS_FINDER_URL}

aws {
  credentials {
    profileName = ""
    accessKey = ${AWS_CREDENTIALS_ACCESS_KEY}
    secretKey = ${AWS_CREDENTIALS_SECRET_KEY}
  }
  region = ${AWS_REGION}
}

basicAuth {
  user = ${BASIC_AUTH_USER}
  password = ${BASIC_AUTH_PASSWORD}
  realm = ${BASIC_AUTH_REALM}
}

analyticsHtml {
  head = ${ANALYTICS_HTML_HEAD}
  body = ${ANALYTICS_HTML_BODY}
}