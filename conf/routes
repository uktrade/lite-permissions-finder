# Route Ogel Conditions
GET         /ogel-conditions/:ogelId            controllers.ViewOgelController.viewOgel(ogelId: String)

# Routes
# ~~~~
->      /common                     common.Routes

# Main index page
GET     /                                     controllers.EntryPointController.index

POST    /                                     controllers.EntryPointController.handleSubmit

GET     /change-destinations                  controllers.ChangeController.changeDestinationCountries

POST    /change-destinations                  controllers.ChangeController.changeDestinationCountries

GET     /change-goods-rating                  controllers.ChangeController.changeControlCode

POST    /change-goods-rating                  controllers.ChangeController.changeControlCode

GET     /change-licence-type                  controllers.ChangeController.changeOgelType

POST    /change-licence-type                  controllers.ChangeController.changeOgelType

GET     /continue-application                 controllers.ContinueApplicationController.renderForm

POST    /continue-application                 controllers.ContinueApplicationController.handleSubmit

GET     /licence-finder-test/:controlCode     controllers.licencefinder.TestEntryController.testEntry(controlCode)

GET     /destination-country                  controllers.DestinationCountryController.renderForm

POST    /destination-country                  controllers.DestinationCountryController.handleSubmit

GET     /export-licence-additional-conditions   controllers.ogel.OgelConditionsController.renderForm

POST    /export-licence-additional-conditions   controllers.ogel.OgelConditionsController.handleSubmit

GET     /export-licence-not-applicable                controllers.ogel.OgelNotApplicableController.renderForm

POST    /export-licence-not-applicable                controllers.ogel.OgelNotApplicableController.handleSubmit

GET     /export-open-general-export-licence-results   controllers.ogel.OgelResultsController.renderForm

POST    /export-open-general-export-licence-results   controllers.ogel.OgelResultsController.handleSubmit

GET     /export-questions                     controllers.ogel.OgelQuestionsController.renderForm

POST    /export-questions                     controllers.ogel.OgelQuestionsController.handleSubmit

GET     /eu-intra-community-trade             controllers.StaticContentController.renderVirtualEU

POST    /eu-intra-community-trade             controllers.StaticContentController.renderVirtualEU

GET     /not-implemented                      controllers.StaticContentController.renderNotImplemented

GET     /register-for-open-general-export-licence     controllers.ogel.OgelSummaryController.renderForm

POST    /register-for-open-general-export-licence     controllers.ogel.OgelSummaryController.handleSubmit

GET     /trade-type                    controllers.TradeTypeController.renderForm

POST    /trade-type                    controllers.TradeTypeController.handleSubmit

GET     /trade-type/brokering          controllers.StaticContentController.renderBrokering

GET     /trade-type/transhipment       controllers.StaticContentController.renderTranshipment

GET     /start-application                    controllers.StartApplicationController.renderForm

POST    /start-application                    controllers.StartApplicationController.handleSubmit(sessionId)

GET     /summary                              controllers.SummaryController.renderForm

POST    /summary                              controllers.SummaryController.handleSubmit

GET     /summary-continue                     controllers.SummaryController.renderFormContinue

POST    /summary-continue                     controllers.SummaryController.handleSubmitContinue

# JavaScript routes
# TODO RE-ENABLE JS ROUTES HERE
#GET     /js-routes                            controllers.JavaScriptRoutesController.jsRoutes

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                         controllers.Assets.versioned(path="/public", file: Asset)

#Build info

GET     /admin/build                          controllers.admin.AdminController.buildInfo

GET     /admin/transactions                   controllers.admin.AdminController.permissionsFinderTransactions

GET     /admin/transactions/:id               controllers.admin.AdminController.permissionsFinderTransactionById(id)

GET     /admin/application-codes              controllers.admin.AdminController.applicationCodes

GET     /admin/application-codes/:applicationCode   controllers.admin.AdminController.applicationCodeByCode(applicationCode)

+ nocsrf
POST    /samlResponse    org.pac4j.play.CallbackController.callback()
GET     /logout          org.pac4j.play.LogoutController.logout()
GET     /logged-out      controllers.AuthorisationController.loggedOut()
GET     /unauthorised    controllers.AuthorisationController.unauthorised()

GET     /test            controllers.DummyController.test()
GET     /test/frontend-components/:component controllers.FrontendComponentTestController.test(component)

GET     /outcome/listed/:stageId    controllers.OutcomeController.outcomeListed(stageId, sessionId)
POST    /outcome/listed/:stageId    controllers.OutcomeController.handleOutcomeListedSubmit(stageId, sessionId)
GET     /outcome/decontrol/:stageId controllers.OutcomeController.outcomeDecontrol(stageId, sessionId)
POST    /outcome/decontrol/:stageId controllers.OutcomeController.handleOutcomeDecontrolSubmit(stageId, sessionId)
GET     /outcome/dropout            controllers.OutcomeController.outcomeDropout(sessionId)
GET     /stage                      controllers.StageController.index(sessionId)
GET     /stage/:stageId             controllers.StageController.render(stageId, sessionId)
POST    /stage/:stageId             controllers.StageController.handleSubmit(stageId, sessionId)

GET     /onboarding             controllers.OnboardingController.renderForm(sessionId)
POST    /onboarding             controllers.OnboardingController.handleSubmit(sessionId)
